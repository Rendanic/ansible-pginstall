- name: Install pgbackrest
  package:
    name: "pgbackrest"
    state: present
  tags: pgbackrest

- name: Template pgbackrest.conf
  template:
    src: logrotate.conf.j2
    dest: /etc/logrotate.d/pgbackrest.conf
    mode: 0644
    owner: root
    group: root
  tags: pgbackrest

- name: Template pgbackrest.conf
  template:
    src: pgbackrest.conf.j2
    dest: /etc/pgbackrest.conf
    owner: root
    group: root
  tags: pgbackrest

- name: pgbackrest Logfile directory
  file:
    path: /var/log/pgbackrest
    state: directory
    owner: "{{postgresql_user}}"
    group: "{{postgresql_group}}"
    mode: o=-rwx
  tags: pgbackrest

- name: pgbackrest stanze directory
  file:
    path: "{{pgbackrestrepo}}"
    state: directory
    owner: "{{postgresql_user}}"
    group: "{{postgresql_group}}"
    mode: 0750
  tags: pgbackrest

- name: pgbackrest stanza-create
  command: pgbackrest --stanza={{pgbackreststanza}} --log-level-console=info stanza-create
  args:
    creates: "{{pgbackrestrepo}}/archive"
  register: cmdout
  become_user: "{{postgresql_user}}"

- debug: msg="{{ cmdout.stdout_lines }}"
  when: cmdout is defined

- name: pgbackrest check
  command: pgbackrest --stanza={{pgbackreststanza}} --log-level-console=info check
  register: cmdout
  become_user: "{{postgresql_user}}"

- debug: msg="{{ cmdout.stdout_lines }}"
  when: cmdout is defined

# show only warn/error due to spam in logfile
- name: initial Full-Backup
  command: pgbackrest --stanza={{pgbackreststanza}} --log-level-console=warn --type=full backup
  args:
    creates: "/var/log/pgbackrest/db1-backup.log"
  register: cmdout
  become_user: "{{postgresql_user}}"

- name: Show warn/errors from initial Full-Backup
  debug: msg="{{ cmdout.stdout_lines }}"
  when: cmdout is defined

