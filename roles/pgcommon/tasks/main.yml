- name: get home for posgresql
  user:
    name: "{{postgresql_user}}"
    state: present
  register: pg_userinfo
  tags: ssh,pgpass

- name: create .ssh directory for postgresql
  file:
    dest: "{{pg_userinfo.home}}/.ssh"
    state: directory
    mode: 0700
    owner: "{{postgresql_user}}"
    group: "{{postgresql_group}}"
  when: pgconfigssh|bool
  tags: ssh

# this is only for Ansible >=2.8...    
- name: create ssh-key for postgres
  openssh_keypair:
    path: "{{pg_userinfo.home}}/.ssh/id_rsa"
    size: 2048
  become_user: "{{postgresql_user}}"
  when: pg_userinfo is defined and pgconfigssh|bool
  tags: ssh

# Task for Ansible < 2.8
# - name: create ssh-key for postgres
#   shell: ssh-keygen -b 2048 -t rsa -f "{{pg_userinfo.home}}/.ssh/id_rsa" -q -N ""
#   args:
#     creates: "{{pg_userinfo.home}}/.ssh/id_rsa"
#   become_user: "{{postgresql_user}}"
#   when: pg_userinfo is defined
#   tags: ssh

- name: copy public keys to control machine
  fetch:
    src:  "{{pg_userinfo.home}}/.ssh/id_rsa.pub"
    dest: "/tmp/pgsql_id_rsq.pub.{{inventory_hostname}}"
    flat: yes
  when: pgconfigssh|bool
  tags: ssh

- name: distribute public keys to database server
  authorized_key:
    user: "{{postgresql_user}}"
    comment: "{{postgresql_user}}@{{item}}"
    state: present
    key: "{{ lookup('file', '/tmp/pgsql_id_rsq.pub.{{item}}') }}"
  with_inventory_hostnames:
    - all
  when: pgconfigssh|bool
  tags: ssh

- name: create .pgpass
  template:
    src: pgpass.j2
    dest: "{{pg_userinfo.home}}/.pgpass"
    mode: 0600
    owner: "{{postgresql_user}}"
    group: "{{postgresql_group}}"
  when: pgpass is defined
  tags: pgpass

# Warning! pgchecmkenv should be placed inside $HOME of postgres owner
- name: create checkmk .env Configuration for mk_postgres
  file:
    path: "{{pgchecmkenv | dirname }}"
    state: directory
    mode: 0755
    owner: "{{postgresql_user}}"
    group: "{{postgresql_group}}"
  when: pgchecmkenv is defined
  tags: cmkenv

- name: create checkmk .env Configuration for mk_postgres
  template:
    src:  checkmkenv.j2
    dest: "{{pgchecmkenv}}"
    mode: 0640
    owner: "{{postgresql_user}}"
    group: "{{postgresql_group}}"
  when: pgchecmkenv is defined
  tags: cmkenv